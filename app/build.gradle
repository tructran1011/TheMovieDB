import com.me.themoviedb.buildsrc.AppSettings
import com.me.themoviedb.buildsrc.Deps

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdk AppSettings.COMPILE_SDK

    defaultConfig {
        applicationId "com.me.themoviedb"
        minSdk AppSettings.MIN_SDK
        targetSdk AppSettings.TARGET_SDK
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "API_KEY", "\"67ff40d2284b3c065b55399de95caa20\""
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions.unitTests {
        includeAndroidResources = true
        all {
            testLogging {
                exceptionFormat "full"
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"
        }
    }
}

dependencies {

    implementation Deps.AndroidX.CORE_KTX
    implementation Deps.AndroidX.APP_COMPAT
    implementation Deps.MATERIAL_DESIGN
    implementation Deps.AndroidX.CONSTRAINT_LAYOUT
    implementation Deps.AndroidX.SWIPE_REFRESH_LAYOUT

    // Test
    testImplementation Deps.JUNIT
    testImplementation Deps.COROUTINES_TEST
    testImplementation Deps.AndroidX.CORE_TESTING
    testImplementation Deps.HAMCREST
    testImplementation Deps.MOCKK
    testImplementation Deps.ROBOLECTRIC
    testImplementation Deps.AndroidX.TEST_EXT_JUNIT
    androidTestImplementation Deps.AndroidX.TEST_ESPRESSO

    // Lifecycle
    implementation Deps.Lifecycle.RUN_TIME_KTX
    implementation Deps.Lifecycle.VIEWMODEL_KTX
    implementation Deps.Lifecycle.LIVE_DATA_KTX
    implementation Deps.Lifecycle.LIFECYCLE_COMMON_JAVA8

    // Retrofit
    implementation Deps.Retrofit.RETROFIT
    implementation Deps.Retrofit.GSON_CONVERTER
    implementation Deps.Retrofit.OKHTTP

    // Stetho
    implementation Deps.Stetho.STETHO
    implementation Deps.Stetho.STETHO_OKHTTP

    // Navigation
    implementation Deps.Navigation.FRAGMENT_KTX
    implementation Deps.Navigation.UI_KTX

    // Hilt
    implementation Deps.Hilt.HILT_ANDROID
    kapt Deps.Hilt.HILT_COMPILER

    // Timber
    implementation Deps.TIMBER

    // Room
    implementation Deps.Room.RUNTIME
    implementation Deps.Room.KTX
    kapt Deps.Room.COMPILER

    // Glide
    implementation Deps.Glide.GLIDE
    kapt Deps.Glide.COMPILER
}